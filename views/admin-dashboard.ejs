<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
      z-index: 50;
    }
    .modal-content {
      background-color: white;
      padding: 24px;
      border-radius: 8px;
      width: 90%;
      max-width: 500px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
  </style>
</head>
<body class="bg-gray-100 font-sans">
  <div class="container mx-auto p-6">
    <h1 class="text-3xl font-bold text-center mb-6 text-gray-800">Admin Dashboard</h1>
    
    <!-- Filters and Reload Button -->
    <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
      <div class="flex gap-4">
        <select id="batchFilter" class="p-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white">
          <option value="all">All Batches</option>
          <% batches.forEach(batch => { %>
            <option value="<%= batch %>" <%= selectedBatch === batch ? 'selected' : '' %>><%= batch %></option>
          <% }) %>
        </select>
        <select id="genderFilter" class="p-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white">
          <option value="all">All Genders</option>
          <% genders.forEach(gender => { %>
            <option value="<%= gender %>" <%= selectedGender === gender ? 'selected' : '' %>><%= gender %></option>
          <% }) %>
        </select>
      </div>
      <button onclick="window.location.reload()" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-md transition duration-200">
        Reload
      </button>
    </div>

    <!-- Users Table -->
    <div class="overflow-x-auto bg-white shadow-md rounded-lg">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Class Roll</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Batch</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Gender</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Deposit</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total Meals</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% if (users.length === 0) { %>
            <tr>
              <td colspan="7" class="px-6 py-4 text-center text-sm text-red-500">
                No users found for the selected filters. Please check the gender values in the database or try different filters.
              </td>
            </tr>
          <% } else { %>
            <% users.forEach(user => { %>
              <tr class="hover:bg-gray-50">
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= user.name %></td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= user.classRoll %></td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= user.batch %></td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= user.gender %></td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= user.deposit %></td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= user.totalMealCount %></td>
                <td class="px-6 py-4 whitespace-nowrap text-sm">
                  <button onclick='openEditModal("<%= user._id %>", <%= user.deposit %>, <%= user.totalMealCount %>, "<%= user.name.replace(/"/g, '\\"') %>")' class="bg-green-500 hover:bg-green-600 text-white font-semibold py-1 px-3 rounded-md transition duration-200">
                    Edit
                  </button>
                </td>
              </tr>
            <% }) %>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Edit Modal -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <h2 class="text-xl font-bold mb-4">Edit User: <span id="userName"></span></h2>
      <form id="editForm" class="space-y-4">
        <div>
          <label for="deposit" class="block text-sm font-medium text-gray-700">Deposit</label>
          <input type="number" id="deposit" name="deposit" min="0" class="w-full p-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
        </div>
        <div>
          <label for="totalMealCount" class="block text-sm font-medium text-gray-700">Total Meal Count</label>
          <input type="number" id="totalMealCount" name="totalMealCount" min="0" class="w-full p-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" required>
        </div>
        <input type="hidden" id="userId" name="userId">
        <div class="flex justify-end gap-4">
          <button type="button" onclick="closeEditModal()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-md transition duration-200">Cancel</button>
          <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-md transition duration-200">Save</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    // Filter handling
    const batchFilter = document.getElementById('batchFilter');
    const genderFilter = document.getElementById('genderFilter');
    [batchFilter, genderFilter].forEach(filter => {
      filter.addEventListener('change', () => {
        const batchValue = batchFilter.value;
        const genderValue = genderFilter.value;
        console.log('Filter selected:', { batch: batchValue, gender: genderValue }); // Debug filter values
        const params = new URLSearchParams();
        if (batchValue !== 'all') params.append('batch', batchValue);
        if (genderValue !== 'all') params.append('gender', genderValue);
        console.log('URL params:', params.toString()); // Debug URL
        window.location.href = `/admin/dashboard?${params.toString()}`;
      });
    });

    // Modal handling
    function openEditModal(userId, deposit, totalMealCount, name) {
      console.log('Opening modal with:', { userId, deposit, totalMealCount, name }); // Debug modal data
      document.getElementById('userId').value = userId;
      document.getElementById('deposit').value = deposit;
      document.getElementById('totalMealCount').value = totalMealCount;
      document.getElementById('userName').textContent = name;
      document.getElementById('editModal').style.display = 'flex';
    }

    function closeEditModal() {
      document.getElementById('editModal').style.display = 'none';
      document.getElementById('editForm').reset();
      document.getElementById('userName').textContent = '';
    }

    // Form submission
    document.getElementById('editForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const userId = document.getElementById('userId').value;
      const deposit = document.getElementById('deposit').value;
      const totalMealCount = document.getElementById('totalMealCount').value;
      console.log('Submitting edit:', { userId, deposit, totalMealCount }); // Debug form data

      // Client-side validation
      if (deposit < 0 || totalMealCount < 0) {
        alert('Deposit and Total Meal Count cannot be negative');
        return;
      }

      try {
        const response = await fetch(`/api/users/${userId}/update`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ deposit: Number(deposit), totalMealCount: Number(totalMealCount) }),
        });
        const result = await response.json();
        console.log('Update response:', result); // Debug response
        if (response.ok) {
          alert(result.message);
          window.location.reload();
        } else {
          alert(result.error || 'Failed to update user');
        }
      } catch (err) {
        console.error('Edit error:', err);
        alert('Error updating user. Please try again.');
      }
      closeEditModal();
    });
  </script>
</body>
</html>